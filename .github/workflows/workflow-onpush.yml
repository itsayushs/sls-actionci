name: Serverless CI Example
on: push
jobs:
  lint: 
    runs-on: ubuntu-latest
    steps:
    - name: testing system commands
      run: echo 'Hello world'
    - name: Code Checkout
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install 
    - run: npx eslint handler.js 
  
  unittest:
    runs-on: ubuntu-latest
    steps:
    - name: Code Checkout
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install 
    - name: running jest for unit testing
      run: npx jest

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: npm install
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install 
    - name: serverless deploy
      uses: serverless/github-action@master
      with:
        args: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}

  # tfdeploy:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: terraform/dev
  #   steps:
  #   - name: Code Checkout
  #     uses: actions/checkout@v2
  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: 0.11.0
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET}}
  #       AWS_DEFAULT_REGION: ap-south-1
  #   - run: ls -la
  #   - name: Terraform Init
  #     run: terraform init
  #   # - run: cd terraform/dev
  #   - name: doing a tfapply
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET}}
  #       AWS_DEFAULT_REGION: ap-south-1
  #     run: terraform apply -auto-approve
  #   - name: waiting 5mins
  #     run: sleep 300
  #   - name: tf destroy
  #     run: terraform destroy -force
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET}}
  #       AWS_DEFAULT_REGION: ap-south-1
